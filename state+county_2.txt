CREATE OR REPLACE TABLE `anbc-hcb-dev.pricing_arme_off_hcb_dev.MEPR_MASTER_DETAIL_NEW_yearly_Laksh` AS
WITH years AS (
  SELECT year
  FROM UNNEST([2019,2020,2021,2022,2023,2024]) AS year
),
member_years AS (
  SELECT
    m.member_id,
    EXTRACT(YEAR FROM y.year_start) AS year,
    m.contract_number,
    m.pbp,
    m.cms_state,
    m.cms_county
  FROM `anbc-hcb-dev.pricing_arme_off_hcb_dev.MEPR_MASTER_DETAIL_NEW` m
  CROSS JOIN (
    SELECT 
      DATE(CONCAT(year, '-01-01')) AS year_start,
      DATE(CONCAT(year, '-12-31')) AS year_end, 
      year
    FROM years
  ) y
  WHERE m.eff_date <= y.year_end
    AND m.term_date >= y.year_start
    AND m.pbp IS NOT NULL
    AND m.cms_county IS NOT NULL
)
SELECT 
  member_id,
  year,
  contract_number,
  pbp,
  cms_state,
  cms_county
FROM member_years
GROUP BY 
  member_id,
  year,
  contract_number,
  pbp,
  cms_state,
  cms_county;



-------------------------------------------------------------

CREATE OR REPLACE TABLE `anbc-hcb-dev.pricing_arme_off_hcb_dev.MEPR_MASTER_DETAIL_NEW_classified_Laksh` AS
WITH curr AS (
  SELECT member_id, year, contract_number, pbp, cms_state, cms_county
  FROM `anbc-hcb-dev.pricing_arme_off_hcb_dev.MEPR_MASTER_DETAIL_NEW_yearly_Laksh`
),
prev AS (
  SELECT member_id, year AS prev_year, contract_number AS prev_contract_number, pbp AS prev_pbp
  FROM `anbc-hcb-dev.pricing_arme_off_hcb_dev.MEPR_MASTER_DETAIL_NEW_yearly_Laksh`
),
-- Identify members who disappeared: present in prev_year but not in current year
churn_by_disappearance AS (
  SELECT
    p.member_id,
    p.prev_year + 1 AS year,
    NULL AS contract_number,
    NULL AS pbp,
    NULL AS cms_state,
    NULL AS cms_county,
    'CHURN_COMPLETELY' AS status
  FROM prev p
  LEFT JOIN curr c
    ON p.member_id = c.member_id
   AND c.year = p.prev_year + 1
  WHERE p.prev_year BETWEEN 2019 AND 2023
    AND c.member_id IS NULL
)
SELECT
  c.member_id,
  c.year,
  c.cms_state,
  c.cms_county,
  c.contract_number,
  c.pbp,
  CASE
    WHEN p.member_id IS NULL THEN 'ACTIVE'
    WHEN p.prev_contract_number = c.contract_number 
         AND p.prev_pbp = c.pbp THEN 'PERSISTENT'
    ELSE 'TRANSITION_TO_ANOTHER_PLAN'
  END AS status
FROM curr c
LEFT JOIN prev p 
  ON c.member_id = p.member_id 
 AND p.prev_year = c.year - 1

UNION ALL

SELECT
  member_id,
  year,
  cms_state,
  cms_county,
  contract_number,
  pbp,
  status
FROM churn_by_disappearance;


-------------------------------------------------------------

CREATE OR REPLACE TABLE `anbc-hcb-dev.pricing_arme_off_hcb_dev.MEPR_MASTER_DETAIL_NEW_summary_county_Laksh` AS
SELECT
  cms_state,
  cms_county,
  year,
  COUNTIF(status = 'ACTIVE') AS active_count,
  COUNTIF(status = 'PERSISTENT') AS persistent_count,
  COUNTIF(status = 'TRANSITION_TO_ANOTHER_PLAN') AS transition_count,
  COUNTIF(status = 'CHURN_COMPLETELY') AS churn_count,
  COUNT(*) AS total_count
FROM `anbc-hcb-dev.pricing_arme_off_hcb_dev.MEPR_MASTER_DETAIL_NEW_classified_Laksh`
GROUP BY cms_state, cms_county, year;


-------------------------------------------------------------

CREATE OR REPLACE TABLE `anbc-hcb-dev.pricing_arme_off_hcb_dev.MEPR_MASTER_DETAIL_NEW_summary_county_perc_Laksh` AS
SELECT
  cms_state,
  cms_county,
  year,
  SAFE_DIVIDE(active_count, total_count)*100 AS active_percentage,
  SAFE_DIVIDE(persistent_count, total_count)*100 AS persistent_percentage,
  SAFE_DIVIDE(transition_count, total_count)*100 AS transition_percentage,
  SAFE_DIVIDE(churn_count, total_count)*100 AS churn_percentage
FROM `anbc-hcb-dev.pricing_arme_off_hcb_dev.MEPR_MASTER_DETAIL_NEW_summary_county_Laksh`;


-------------------------------------------------------------



-------------------------------------------------------------